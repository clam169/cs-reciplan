@using Microsoft.AspNetCore.Identity
@inject RecipeService recipeService
@inject AuthenticationStateProvider _authenticationStateProvider


<form>
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label for="">Title:</label>
                <input type="text" @bind="@title" class="form-control">
            </div>
            <div class="form-group">
                <label for="">Image (url):</label>
                <input type="text" @bind="@image" class="form-control">
            </div>
            <div class="form-group">
                <label for="">Ingredients:</label>
                <input type="text" @bind="@ingredients" class="form-control">
            </div>
            <div class="form-group">
                <label for="">Description:</label>
                <input type="text" @bind="@description" class="form-control">
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="">Steps:</label>
                <input type="text" name="steps" @bind="@steps" class="form-control" style="height: 225px;" />
            </div>
            <div class="d-flex justify-content-end">
                <button @onclick="@Add" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
</form>

@code {

    string? userId;
    string? title;
    string? description;
    string? image;
    string? steps;
    string? ingredients;

    async Task<string> getUserId()
    {
        var user = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
        userId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
        return userId;
    }
    protected async Task Add()
    {
        // create new object to insert
        Recipe r = new Recipe()
        {
            Id = await getUserId(),
            Title = title,
            Description = description,
            Image = image,
            Steps = steps,
            Ingredients = ingredients
        };
        // call the function that will add recipe to db

        await recipeService.InsertRecipeAsync(r);

    }
}
